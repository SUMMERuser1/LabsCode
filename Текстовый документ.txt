re.search(pattern, string) - Поиск первого вхождения шаблона в строке.
re.match(pattern, string) - Поиск в начале строки.
re.findall(pattern, string) - Список всех найденных совпадений.
re.finditer(pattern, string) - Итератор для всех найденных совпадений.
re.sub(pattern, repl, string) - Замена всех совпадений в строке.
re.compile(pattern) - Компиляция регулярного выражения в объект для многократного использования.


. (точка) - Соответствует любому символу, кроме новой строки.
^ - Начало строки.
$ - Конец строки.
* - Ноль или более вхождений предыдущего символа.
+ - Одно или более вхождений предыдущего символа.
? - Ноль или одно вхождение предыдущего символа.
{n} - Ровно n вхождений предыдущего символа.
{n,} - n или более вхождений предыдущего символа.
{n,m} - От n до m вхождений предыдущего символа.
[] - Соответствие любому символу в скобках (например, [abc] соответствует 'a', 'b', или 'c').
| - Логическое ИЛИ (например, a|b соответствует 'a' или 'b').
() - Группировка выражений.
\ - Экранирование специальных символов или обозначение специальных последовательностей.
Специальные последовательности
\d - Любая цифра (эквивалент [0-9]).
\D - Любой символ, не являющийся цифрой (эквивалент [^0-9]).
\s - Любой пробельный символ.
\S - Любой непробельный символ.
\w - Любой алфавитно-цифровой символ (буквы, цифры, подчеркивание).
\W - Любой символ, не являющийся алфавитно-цифровым.
\b - Граница слова.
\B - Не граница слова.
\A - Начало ввода.
\Z - Конец ввода.


import re

text = ""


pattern = r'\d+|[A-Z]|[a-z]'

matches = re.findall(pattern, text)

print(matches)